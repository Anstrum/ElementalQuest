//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/ChangeCharacter.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @ChangeCharacter : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @ChangeCharacter()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""ChangeCharacter"",
    ""maps"": [
        {
            ""name"": ""CharacterSelection"",
            ""id"": ""e2bf82b1-8761-46bb-895b-12f12da051b0"",
            ""actions"": [
                {
                    ""name"": ""FireKnight"",
                    ""type"": ""Button"",
                    ""id"": ""f325eda6-a1cb-4f56-aacb-21b8b5a5260a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GroundMonk"",
                    ""type"": ""Button"",
                    ""id"": ""3ce0e977-2861-4844-8766-4fdd5954a585"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LearArcher"",
                    ""type"": ""Button"",
                    ""id"": ""d838060f-496c-4a57-abc2-e5e8e74b744e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MetalBladekeeper"",
                    ""type"": ""Button"",
                    ""id"": ""2fb22de0-883c-4fe2-8d43-31d935b1b95d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WaterPriestess"",
                    ""type"": ""Button"",
                    ""id"": ""1c2934c4-8416-4e8e-94c0-30403b0d72c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WindHashashin"",
                    ""type"": ""Button"",
                    ""id"": ""8c05d043-4023-4efa-bd77-0214858ec5a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c3a630c4-a94e-4844-a2ba-1aeedeaae002"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireKnight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c44fa3a0-89a5-4cf7-8729-42ff0ef77396"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundMonk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""08fd4b3f-4668-4632-86c0-7e62f2fd419e"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LearArcher"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""944f8254-d89f-4618-a80c-79926a90f221"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MetalBladekeeper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b8da622-eaf6-4a94-b9c6-45a402dd56fa"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterPriestess"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53c9b19a-0465-4340-8538-59e5d0f4bd72"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WindHashashin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CharacterSelection
        m_CharacterSelection = asset.FindActionMap("CharacterSelection", throwIfNotFound: true);
        m_CharacterSelection_FireKnight = m_CharacterSelection.FindAction("FireKnight", throwIfNotFound: true);
        m_CharacterSelection_GroundMonk = m_CharacterSelection.FindAction("GroundMonk", throwIfNotFound: true);
        m_CharacterSelection_LearArcher = m_CharacterSelection.FindAction("LearArcher", throwIfNotFound: true);
        m_CharacterSelection_MetalBladekeeper = m_CharacterSelection.FindAction("MetalBladekeeper", throwIfNotFound: true);
        m_CharacterSelection_WaterPriestess = m_CharacterSelection.FindAction("WaterPriestess", throwIfNotFound: true);
        m_CharacterSelection_WindHashashin = m_CharacterSelection.FindAction("WindHashashin", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CharacterSelection
    private readonly InputActionMap m_CharacterSelection;
    private ICharacterSelectionActions m_CharacterSelectionActionsCallbackInterface;
    private readonly InputAction m_CharacterSelection_FireKnight;
    private readonly InputAction m_CharacterSelection_GroundMonk;
    private readonly InputAction m_CharacterSelection_LearArcher;
    private readonly InputAction m_CharacterSelection_MetalBladekeeper;
    private readonly InputAction m_CharacterSelection_WaterPriestess;
    private readonly InputAction m_CharacterSelection_WindHashashin;

    public struct CharacterSelectionActions
    {
        private @ChangeCharacter m_Wrapper;
        public CharacterSelectionActions(@ChangeCharacter wrapper) { m_Wrapper = wrapper; }
        public InputAction @FireKnight => m_Wrapper.m_CharacterSelection_FireKnight;
        public InputAction @GroundMonk => m_Wrapper.m_CharacterSelection_GroundMonk;
        public InputAction @LearArcher => m_Wrapper.m_CharacterSelection_LearArcher;
        public InputAction @MetalBladekeeper => m_Wrapper.m_CharacterSelection_MetalBladekeeper;
        public InputAction @WaterPriestess => m_Wrapper.m_CharacterSelection_WaterPriestess;
        public InputAction @WindHashashin => m_Wrapper.m_CharacterSelection_WindHashashin;
        public InputActionMap Get() { return m_Wrapper.m_CharacterSelection; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterSelectionActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterSelectionActions instance)
        {
            if (m_Wrapper.m_CharacterSelectionActionsCallbackInterface != null)
            {
                @FireKnight.started -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnFireKnight;
                @FireKnight.performed -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnFireKnight;
                @FireKnight.canceled -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnFireKnight;
                @GroundMonk.started -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnGroundMonk;
                @GroundMonk.performed -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnGroundMonk;
                @GroundMonk.canceled -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnGroundMonk;
                @LearArcher.started -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnLearArcher;
                @LearArcher.performed -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnLearArcher;
                @LearArcher.canceled -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnLearArcher;
                @MetalBladekeeper.started -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnMetalBladekeeper;
                @MetalBladekeeper.performed -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnMetalBladekeeper;
                @MetalBladekeeper.canceled -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnMetalBladekeeper;
                @WaterPriestess.started -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnWaterPriestess;
                @WaterPriestess.performed -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnWaterPriestess;
                @WaterPriestess.canceled -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnWaterPriestess;
                @WindHashashin.started -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnWindHashashin;
                @WindHashashin.performed -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnWindHashashin;
                @WindHashashin.canceled -= m_Wrapper.m_CharacterSelectionActionsCallbackInterface.OnWindHashashin;
            }
            m_Wrapper.m_CharacterSelectionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @FireKnight.started += instance.OnFireKnight;
                @FireKnight.performed += instance.OnFireKnight;
                @FireKnight.canceled += instance.OnFireKnight;
                @GroundMonk.started += instance.OnGroundMonk;
                @GroundMonk.performed += instance.OnGroundMonk;
                @GroundMonk.canceled += instance.OnGroundMonk;
                @LearArcher.started += instance.OnLearArcher;
                @LearArcher.performed += instance.OnLearArcher;
                @LearArcher.canceled += instance.OnLearArcher;
                @MetalBladekeeper.started += instance.OnMetalBladekeeper;
                @MetalBladekeeper.performed += instance.OnMetalBladekeeper;
                @MetalBladekeeper.canceled += instance.OnMetalBladekeeper;
                @WaterPriestess.started += instance.OnWaterPriestess;
                @WaterPriestess.performed += instance.OnWaterPriestess;
                @WaterPriestess.canceled += instance.OnWaterPriestess;
                @WindHashashin.started += instance.OnWindHashashin;
                @WindHashashin.performed += instance.OnWindHashashin;
                @WindHashashin.canceled += instance.OnWindHashashin;
            }
        }
    }
    public CharacterSelectionActions @CharacterSelection => new CharacterSelectionActions(this);
    public interface ICharacterSelectionActions
    {
        void OnFireKnight(InputAction.CallbackContext context);
        void OnGroundMonk(InputAction.CallbackContext context);
        void OnLearArcher(InputAction.CallbackContext context);
        void OnMetalBladekeeper(InputAction.CallbackContext context);
        void OnWaterPriestess(InputAction.CallbackContext context);
        void OnWindHashashin(InputAction.CallbackContext context);
    }
}
